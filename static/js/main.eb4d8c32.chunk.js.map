{"version":3,"sources":["Deck.js","CardColumn.js","Card.js","Hand.js","App.js","serviceWorker.js","index.js"],"names":["Deck","this","pop","i","length","offset","Math","floor","random","temp","splice","push","reverse","CardColumn","props","display","isNaN","parseInt","value","ranks","col1","col2","settings","column","order","map","item","key","className","style","gridColumn","fontSize","suit","left","gridRow","leftSuit","right","transform","translateX","rightSuit","Card","cardColor","color","id","HandStyle","justifyContent","marginTop","CardStyle","padding","position","Hand","hand","toString","weights","includes","sort","a","b","cards","App","state","deck","ready","shuffle","setState","deal","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eb4d8c32.chunk.js","sourcesContent":["class Deck {\n  // initial deck state\n  #deck = [\"A♠\",\"2♠\",\"3♠\",\"4♠\",\"5♠\",\"6♠\",\"7♠\",\"8♠\",\"9♠\",\"0♠\",\"J♠\",\"Q♠\",\"K♠\",\n          \"A♥\",\"2♥\",\"3♥\",\"4♥\",\"5♥\",\"6♥\",\"7♥\",\"8♥\",\"9♥\",\"0♥\",\"J♥\",\"Q♥\",\"K♥\",\n          \"A♣\",\"2♣\",\"3♣\",\"4♣\",\"5♣\",\"6♣\",\"7♣\",\"8♣\",\"9♣\",\"0♣\",\"J♣\",\"Q♣\",\"K♣\",\n          \"A♦\",\"2♦\",\"3♦\",\"4♦\",\"5♦\",\"6♦\",\"7♦\",\"8♦\",\"9♦\",\"0♦\",\"J♦\",\"Q♦\",\"K♦\"]\n\n  deal() {\n    // Return a card from the top of the deck\n    return this.#deck.pop();\n  }\n\n  shuffle() {\n    for(let i = 0; i < this.#deck.length; i++) {\n      // 1. Select a random card from the deck\n      const offset = Math.floor(Math.random() * this.#deck.length)\n      const temp = this.#deck[offset];\n      // 2. remove the card from the deck\n      this.#deck.splice(offset,1);\n      // 3. place the card on the top of the deck\n      this.#deck.push(temp);\n      // 4. every 3rd shuffle, reverse the deck\n      if(i%3 === 0) this.#deck.reverse()\n    }\n  }\n}\n\nexport default Deck;\n","import React from 'react';\nimport './CardColumn.css';\nimport ranks from './ranks';\n\n/** \n  * props.order: 1,2,or3 to indicate which column is being rendered\n  * props.value: card value (rank)\n  * props.suit: card suit: (♠ ♥ ♦ ♣ ♤ ♡ ♢ ♧)\n  */\n\nfunction CardColumn(props) {\n    /* Look up appropriate icon placement in ranks.json */\n    const display = isNaN(parseInt(props.value[0]))\n        ? [[ranks[1].col1], [ranks[1].col2]]                                      // face cards\n        : [[ranks[props.value].col1], [ranks[props.value].col2]];           // number cards\n\n    // display: Determine which column sub-array to search    -> 0,1,0\n    // column: Determine which gridColumn to render result to -> 2,3,4\n    const settings = {display: 0, column: '2'};\n\n    switch(props.order) {\n        case '2' : settings.display = 1; settings.column = '3'; break;\n        case '3' : settings.display = 0; settings.column = '4'; break;\n        default: break;\n    }\n\n    return <> { display[settings.display][0].map( (item) => { return (\n        <div key={item} className={item} style={{ gridColumn: settings.column, fontSize: '1.7em'}}>\n            {props.suit}\n        </div>\n    )})} </>\n}\n\nexport default CardColumn;\n","import React from 'react';\nimport CardColumn from './CardColumn.js';\nimport './Card.css';\n\n/** \n  * props.value:\n  *   [0]. card value (rank)\n  *      valid values: 2,3,4,5,6,7,8,9,0,J,Q,K,A\n  *   [1]. card suit\n  *      card suits: ♠ ♥ ♦ ♣ ♤ ♡ ♢ ♧\n  * props.style: styling attributes, relative to other cards in hand\n  */\n\n// style the edge elements\nconst left = { gridColumn: '1', gridRow: '1' }\nconst leftSuit = { gridColumn: '1', gridRow: '2'}\nconst right = { gridColumn: '5', gridRow: '13', \n    transform: `rotate(-180deg)`, translateX: `(-8px)`}\nconst rightSuit = { gridColumn: '5', gridRow: '12', \n    transform: `rotate(-180deg)`, translateX: `(-8px)`}\n\nfunction Card(props) {\n    const value = props.value[0] === '0' ? '10' : props.value[0];\n    const suit = props.value[1];\n    const cardColor = (suit === '♥' || suit === '♦' || suit === '♡' || suit === '♢') \n        ? {color:\"red\"} : {color:\"black\"};\n\n    return (\n        <div id={value + suit} className=\"card_container\" \n        style={{...cardColor, ...props.style}}>\n            <div style={left} >{value}</div>\n            <div style={leftSuit}>{suit}</div>\n            <CardColumn order=\"1\" value={props.value[0]} suit={suit}/>\n            <CardColumn order=\"2\" value={props.value[0]} suit={suit}/>\n            <CardColumn order=\"3\" value={props.value[0]} suit={suit}/>\n            <div style={rightSuit}>{suit}</div>\n            <div style={right} >{value}</div>\n       </div>\n    )\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card.js';\n\n/** Accepts Array of 5 char (XY):\n  * X. card value (rank)\n  *    valid values: 2,3,4,5,6,7,8,9,0,J,Q,K,A\n  * Y. card suit\n  *    card suits: ♠ ♥ ♦ ♣ ♤ ♡ ♢ ♧\n  */\n\nfunction Hand(props) {\n    sort(props.cards);\n\n    return (\n        <div style={HandStyle}>\n            <Card value={props.cards[0]} style={{marginTop: '12px',\n                ...CardStyle, left: '120px', transform: `rotate(-30deg)`}}/>\n            <Card value={props.cards[1]} style={{marginTop: '2px',\n                ...CardStyle, left: '60px', transform: `rotate(-15deg)`}}/>\n            <Card value={props.cards[2]} style={{...CardStyle}}/>\n            <Card value={props.cards[3]} style={{marginTop: '10px',\n                ...CardStyle, left: '-60px', transform: `rotate(15deg)`}}/>\n            <Card value={props.cards[4]} style={{marginTop: '30px',\n                ...CardStyle, left: '-120px', transform: `rotate(30deg)`}}/>\n        </div>\n    )\n}\n\nfunction sort (hand) {\n    const temp = hand.toString();\n    const ace_hi = temp.includes('A') \n        ? (temp.includes('2') && temp.includes('3') && temp.includes('4') && temp.includes('5'))\n                ? false : true : true;\n    const weights = {\n        '2': 2, '3': 3, '4': 4, '5': 5,\n        '6': 6, '7': 7, '8': 8, '9': 9,\n        '0': 10, 'J': 11, 'Q': 12, 'K': 13,\n        'A': ace_hi ? 14 : 1\n    }\n    hand.sort( (a,b) => { return weights[a[0]] - weights[b[0]]});\n}\n\nconst HandStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '10px'\n}\n\nconst CardStyle = {\n    padding: '3px',\n    position: 'relative'\n}\n\nexport default Hand;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Deck from './Deck';\nimport Hand from './Hand';\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            deck: new Deck(),\n            ready: false\n        };\n    }\n\n    componentDidMount() {\n        this.state.deck.shuffle();\n        this.setState({ ready: true });\n    }\n\n    render() {\n        if (this.state.ready) {\n            const cards = [\n                this.state.deck.deal(),\n                this.state.deck.deal(),\n                this.state.deck.deal(),\n                this.state.deck.deal(),\n                this.state.deck.deal()\n            ]\n            return (\n                <div>\n                    <Hand cards={cards} />\n                </div>\n            )\n        } else {\n            return <div></div>\n        }\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}